plugins {
    id 'com.android.application'

    id 'kotlin-android'

    id 'kotlinx-serialization'

    id 'kotlin-kapt' // 使用 kapt 注解处理工具

    id "com.google.devtools.ksp"
}

def sdkVersion = rootProject.sdkVersion
android {
    compileSdk sdkVersion["compile"]
    defaultConfig {
        applicationId "com.catchpig.kmvvm"
        minSdkVersion sdkVersion["min"]
        targetSdkVersion sdkVersion["target"]
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        viewBinding = true
        buildConfig true
    }
    namespace 'com.catchpig.kmvvm'

}

def dependenciesVersion = rootProject.dependenciesVersion
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${dependenciesVersion["kotlin"]}"
    implementation "androidx.appcompat:appcompat:${dependenciesVersion["appcompat"]}"
    implementation "androidx.core:core-ktx:${dependenciesVersion["core_ktx"]}"
    implementation "androidx.recyclerview:recyclerview:${dependenciesVersion["recycleview"]}"
    implementation "androidx.coordinatorlayout:coordinatorlayout:${dependenciesVersion["coordinatorlayout"]}"
    implementation "androidx.constraintlayout:constraintlayout:${dependenciesVersion["constraintlayout"]}"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    if (rootProject.frame["importSourceCode"]) {
        implementation project(':download')
        implementation project(':mvvm')
        ksp project(':compiler')
    } else {
        def kmvvm_version = rootProject.kmvvmVersion
        implementation "com.github.catchpig.kmvvm:download:$kmvvm_version"
        implementation "com.github.catchpig.kmvvm:mvvm:$kmvvm_version"
        ksp "com.github.catchpig.kmvvm:compiler:$kmvvm_version"
    }


    implementation("com.squareup.retrofit2:adapter-rxjava3:${dependenciesVersion["retrofit2"]}")

    //rxjava3
    implementation "io.reactivex.rxjava3:rxjava:${dependenciesVersion["rxjava"]}"
    implementation "io.reactivex.rxjava3:rxandroid:${dependenciesVersion["rxandroid"]}"
    //刷新
    implementation "io.github.scwang90:refresh-layout-kernel:${dependenciesVersion["SmartRefreshLayout"]}"
    //刷新-头部
    implementation "io.github.scwang90:refresh-header-material:${dependenciesVersion["SmartRefreshLayout"]}"
    //刷新-底部
    implementation "io.github.scwang90:refresh-footer-classics:${dependenciesVersion["SmartRefreshLayout"]}"
    //图片加载框架
    implementation "com.github.bumptech.glide:glide:${dependenciesVersion["glide"]}"
    kapt "com.github.bumptech.glide:compiler:${dependenciesVersion["glide"]}"
    //权限
    implementation "com.github.tbruyelle:rxpermissions:${dependenciesVersion["rxpermissions"]}"
    implementation "com.gitee.catchpig:UIViewPager:${dependenciesVersion["UIViewPager"]}"
    implementation "com.localebro:okhttpprofiler:${dependenciesVersion["okhttpprofiler"]}"
}
